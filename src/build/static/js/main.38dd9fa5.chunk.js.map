{"version":3,"sources":["components/routes/boards/index.jsx","styles/ColorsPalette.js","components/routes/login/styled.js","components/routes/login/index.jsx","components/routes/signUp/styled.js","components/routes/signUp/index.jsx","Routes.jsx","App.jsx","index.js"],"names":["Login","useState","isLoading","setIsLoading","isError","setIsError","students","setStudents","useEffect","getStudents","a","Axios","get","headers","response","data","LinearProgress","color","Table","stickyHeader","TableHead","TableRow","TableCell","component","scope","align","TableBody","map","student","first_name","last_name","first_exam","email","second_exam","third_exam","id","promedio","Situaci贸n","style","toFixed","sx","border","ColorsPalette","aquamarine","black","celadon","emerald","midnightBlue","purple","white","Container","styled","section","error","setError","history","useHistory","useForm","register","handleSubmit","errors","formState","onSubmit","values","post","username","password","loggedUser","push","className","type","placeholder","required","message","minLength","value","disabled","to","SignUp","console","Routes","exact","from","path","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.38dd9fa5.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableHead from \"@mui/material/TableHead\";\nimport LinearProgress from \"@mui/material/LinearProgress\";\nimport Axios from \"axios\";\n\nconst Login = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [students, setStudents] = useState([]);\n\n  useEffect(() => {\n    const getStudents = async () => {\n      try {\n        setIsLoading(true);\n        const response = await Axios.get(\"http://localhost:5000/students\", {\n          headers: { \"Access-Control-Allow-Origin\": \"*\" },\n        });\n        setStudents(response.data.data);\n        setIsError(false);\n      } catch (error) {\n        setIsError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getStudents();\n  }, [setStudents]);\n\n  if (isLoading) return <LinearProgress color=\"success\" />;\n\n  if (isError) return <p>There was an error</p>;\n\n  return (\n    <Table stickyHeader>\n      <TableHead>\n        <TableRow>\n          <TableCell component=\"th\" scope=\"row\">\n            Nombre\n          </TableCell>\n          <TableCell>Apellido</TableCell>\n          {/* <TableCell>Email</TableCell> */}\n          <TableCell align=\"center\">Examen 1</TableCell>\n          <TableCell align=\"center\">Examen 2</TableCell>\n          <TableCell align=\"center\">Examen 3</TableCell>\n          <TableCell align=\"center\">Situaci贸n</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {students.map((student) => {\n          const {\n            first_name,\n            last_name,\n            email,\n            first_exam,\n            second_exam,\n            third_exam,\n            id,\n          } = student;\n          const promedio = (first_exam + second_exam + third_exam) / 3;\n          const Situaci贸n = () => {\n            if (promedio <= 3) {\n              return <div style={{ color: \"red\" }}>{promedio.toFixed(2)}</div>;\n            }\n            if (promedio <= 6) {\n              return (\n                <div style={{ color: \"orange\" }}>{promedio.toFixed(2)}</div>\n              );\n            }\n            if (promedio <= 10) {\n              return (\n                <div style={{ color: \"green\" }}>{promedio.toFixed(2)}</div>\n              );\n            }\n            return <div />;\n          };\n\n          return (\n            <TableRow\n              key={id}\n              sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n            >\n              <TableCell component=\"th\" scope=\"row\">\n                {first_name}\n              </TableCell>\n              <TableCell>{last_name}</TableCell>\n              {/* <TableCell>{email}</TableCell> */}\n              <TableCell align=\"center\">{first_exam}</TableCell>\n              <TableCell align=\"center\">{second_exam}</TableCell>\n              <TableCell align=\"center\">{third_exam}</TableCell>\n              <TableCell align=\"center\">\n                <Situaci贸n />\n              </TableCell>\n            </TableRow>\n          );\n        })}\n      </TableBody>\n    </Table>\n  );\n};\n\nexport default Login;\n","const ColorsPalette = {\n  aquamarine: \"#78f4b1\",\n  black: \"#000000\",\n  celadon: \"#A5DFB4\",\n  emerald: \"#60c67c\",\n  midnightBlue: \"#370455\",\n  purple: \"#65079C\",\n  white: \"#FFFFFF\",\n};\n\nexport default ColorsPalette;\n","import styled from \"styled-components\";\nimport ColorsPalette from \"styles/ColorsPalette\";\n\nconst Container = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  height: 100vh;\n  background-color: black;\n\n  form {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end;\n    align-items: center;\n    height: 65%;\n    width: 100%;\n    margin-bottom: 5%;\n    & > input {\n      opacity: 0.95;\n      box-sizing: border-box;\n    }\n\n    .userNotFoud {\n      font-family: var(--secondary-font);\n      font-size: 16px;\n      color: ${ColorsPalette.white};\n    }\n\n    .rowInput {\n      position: relative;\n      display: flex;\n      flex-direction: column;\n      width: 90%;\n      max-width: 400px;\n      padding-bottom: 22px;\n    }\n\n    input[type=\"text\"],\n    input[type=\"password\"] {\n      background-color: #333333;\n      height: 55px;\n      width: 100%;\n      border: none;\n      border-radius: 5px;\n      font-family: \"Roboto-light\";\n      font-size: 16px;\n      color: ${ColorsPalette.white};\n\n      :focus {\n        outline: none;\n      }\n    }\n\n    & > input[type=\"submit\"] {\n      margin-top: 80px;\n      padding: 25px 80px;\n      font-size: 22px;\n      font-family: var(--secondary-font);\n      color: ${ColorsPalette.white};\n      background-color: ${ColorsPalette.emerald};\n      border: none;\n      border-radius: 20px;\n      cursor: pointer;\n    }\n\n    & > input[type=\"submit\"]:disabled {\n      background-color: ${ColorsPalette.celadon};\n    }\n\n    .inputError {\n      border: 1px solid rgba(255, 0, 0, 0.5) !important;\n    }\n\n    .error {\n      position: absolute;\n      bottom: 0;\n      width: 100%;\n      margin: 0;\n      color: #cc0000;\n    }\n  }\n\n  p {\n    color: white;\n    font-family: var(--secondary-font);\n\n    & > a {\n      color: ${ColorsPalette.emerald};\n    }\n  }\n\n  p:nth-child(3) {\n    margin-top: 20%;\n  }\n`;\n\nexport default Container;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport Axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nimport LoginSection from \"./styled\";\n\nconst Login = () => {\n  const [error, setError] = useState(\"\");\n  const history = useHistory();\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n  const onSubmit = async (values) => {\n    try {\n      const loggedUser = await Axios.post(\n        \"http://localhost:5000/users/login\",\n        {\n          username: values.username,\n          password: values.password,\n        },\n        { headers: { \"Access-Control-Allow-Origin\": \"*\" } }\n      );\n      if (loggedUser && !loggedUser.error) {\n        history.push(\"/boards\");\n        setError(\"\");\n      }\n    } catch (error) {\n      setError(error);\n    }\n  };\n\n  return (\n    <LoginSection>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        {error && (\n          <div className=\"userNotFoud\">\n            Invalid credentials. Please try again.\n          </div>\n        )}\n        <div className=\"rowInput\">\n          <input\n            type=\"text\"\n            placeholder=\"John Doe\"\n            {...register(\"username\", { required: \"Username is required\" })}\n            className={errors.username && \"inputError\"}\n          />\n          {errors.username && (\n            <p className=\"error\">{errors.username.message}</p>\n          )}\n        </div>\n        <div className=\"rowInput\">\n          <input\n            type=\"password\"\n            placeholder=\"*********\"\n            {...register(\"password\", {\n              required: \"Password is required\",\n              minLength: {\n                value: 5,\n                message: \"Password min length is 5\",\n              },\n            })}\n            className={errors.password && \"inputError\"}\n          />\n          {errors.password && (\n            <p className=\"error\">{errors.password.message}</p>\n          )}\n        </div>\n        <input\n          type=\"submit\"\n          value=\"Login\"\n          disabled={!!errors.username || !!errors.password}\n        />\n      </form>\n      <p>\n        Don&apos;t have an account? <Link to=\"signUp\"> Signup here</Link>\n      </p>\n    </LoginSection>\n  );\n};\n\nexport default Login;\n","import styled from \"styled-components\";\nimport ColorsPalette from \"styles/ColorsPalette\";\n\nconst Container = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  height: 100vh;\n  background-color: black;\n\n  form {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end;\n    align-items: center;\n    height: 65%;\n    width: 100%;\n    margin-bottom: 5%;\n    & > input {\n      opacity: 0.95;\n      box-sizing: border-box;\n    }\n\n    .rowInput {\n      position: relative;\n      display: flex;\n      flex-direction: column;\n      width: 90%;\n      max-width: 400px;\n      padding-bottom: 22px;\n    }\n\n    input[type=\"text\"],\n    input[type=\"password\"] {\n      background-color: #333333;\n      height: 55px;\n      width: 100%;\n      border: none;\n      border-radius: 5px;\n      font-family: \"Roboto-light\";\n      font-size: 16px;\n      color: ${ColorsPalette.white};\n\n      :focus {\n        outline: none;\n      }\n    }\n\n    & > input[type=\"submit\"] {\n      margin-top: 80px;\n      padding: 25px 80px;\n      font-size: 22px;\n      font-family: var(--secondary-font);\n      color: ${ColorsPalette.white};\n      background-color: ${ColorsPalette.emerald};\n      border: none;\n      border-radius: 20px;\n      cursor: pointer;\n    }\n\n    & > input[type=\"submit\"]:disabled {\n      background-color: ${ColorsPalette.celadon};\n    }\n\n    .inputError {\n      border: 1px solid rgba(255, 0, 0, 0.5) !important;\n    }\n\n    .error {\n      position: absolute;\n      bottom: 0;\n      width: 100%;\n      margin: 0;\n      color: #cc0000;\n    }\n  }\n\n  p {\n    color: white;\n    font-family: var(--secondary-font);\n\n    & > a {\n      color: ${ColorsPalette.emerald};\n    }\n  }\n\n  p:nth-child(3) {\n    margin-top: 20%;\n  }\n`;\n\nexport default Container;\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport Axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nimport SignUpSection from \"./styled\";\n\nconst SignUp = () => {\n  const history = useHistory();\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n  const onSubmit = async (values) => {\n    const loggedUser = await Axios.post(\n      \"http://localhost:5000/users\",\n      {\n        username: values.username,\n        password: values.password,\n      },\n      { headers: { \"Access-Control-Allow-Origin\": \"*\" } }\n    );\n\n    if (loggedUser) {\n      history.push(\"/login\");\n    } else {\n      console.error(\"Error creating user\");\n    }\n  };\n\n  return (\n    <SignUpSection>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <div className=\"rowInput\">\n          <input\n            type=\"text\"\n            placeholder=\"John Doe\"\n            {...register(\"username\", { required: \"Username is required\" })}\n            className={errors.username && \"inputError\"}\n          />\n          {errors.username && (\n            <p className=\"error\">{errors.username.message}</p>\n          )}\n        </div>\n        <div className=\"rowInput\">\n          <input\n            type=\"password\"\n            placeholder=\"*********\"\n            {...register(\"password\", {\n              required: \"Password is required\",\n              minLength: {\n                value: 5,\n                message: \"Password min length is 5\",\n              },\n            })}\n            className={errors.password && \"inputError\"}\n          />\n          {errors.password && (\n            <p className=\"error\">{errors.password.message}</p>\n          )}\n        </div>\n        <input\n          type=\"submit\"\n          value=\"SignUp\"\n          disabled={!!errors.username || !!errors.password}\n        />\n      </form>\n      <p>\n        Already have an account? <Link to=\"login\"> Login here</Link>\n      </p>\n    </SignUpSection>\n  );\n};\n\nexport default SignUp;\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\n\nimport { Login, Boards, SignUp } from \"components/routes\";\n\nconst Routes = () => {\n  return (\n    <Switch>\n      <Redirect exact from=\"/\" to=\"/login\" />\n      <Route exact path=\"/login\">\n        <Login />\n      </Route>\n      <Route exact path=\"/boards\">\n        <Boards />\n      </Route>\n      <Route exact path=\"/signUp\">\n        <SignUp />\n      </Route>\n    </Switch>\n  );\n};\n\nexport default Routes;\n","import React from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Routes from \"./Routes.jsx\";\nimport \"./styles/index.css\";\n\nconst App = () => {\n  return (\n    <Router>\n      <Routes />\n    </Router>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App.jsx\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}